const CACHE_NAME="emit-app-cache-v1";self.addEventListener("install",t=>{self.skipWaiting()}),self.addEventListener("activate",t=>{t.waitUntil(self.clients.claim())}),self.addEventListener("fetch",t=>{const e=new URL(t.request.url);"GET"===t.request.method&&("http:"!==e.protocol&&"https:"!==e.protocol||"/"!==e.pathname&&"/index.html"!==e.pathname&&t.respondWith(caches.match(t.request).then(a=>a||fetch(t.request).then(a=>{if(200===a.status&&("image"===t.request.destination||e.pathname.match(/\.(css|js|png|jpg|jpeg|svg|gif|webp|ico|woff|woff2)$/))){const e=a.clone();caches.open(CACHE_NAME).then(a=>{a.put(t.request,e)}).catch(t=>{})}return a}).catch(e=>{if("image"===t.request.destination)return new Response("",{status:404,statusText:"Image not available offline"});throw e}))))}),self.addEventListener("message",async t=>{if(t.data&&"CACHE_CURRENT_PAGE"===t.data.type){const{url:e}=t.data;try{const t=await caches.open(CACHE_NAME),a=await fetch(e);200===a.status&&await t.put(e,a)}catch(t){}}});